"use strict";(self.webpackChunkraffaello_docs=self.webpackChunkraffaello_docs||[]).push([[276],{5370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/global-class","title":"Global Class Object","description":"RAFFAELLO is a class object based library. The idea is that for every RAFFAELLO template in your page you have to declare an unnamed class instantiated inline. This class shoud only holds a constructor() and a method initiateDrawing().","source":"@site/docs/api/00_global-class.mdx","sourceDirName":"api","slug":"/api/global-class","permalink":"/raffaello-docs/api/global-class","draft":false,"unlisted":false,"editUrl":"https://github.com/TheoKVA/raffaello-docs/tree/main/docs/api/00_global-class.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Other add-ons","permalink":"/raffaello-docs/guide/other-addons"},"next":{"title":"Raffaello_Canvas","permalink":"/raffaello-docs/api/raffaello-canvas"}}');var l=n(4848),a=n(8453),i=n(8069);const r={},c="Global Class Object",o={},d=[{value:"constructor()",id:"constructor",level:2},{value:"templateInstructions()",id:"templateinstructions",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"global-class-object",children:"Global Class Object"})}),"\n","\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"RAFFAELLO"})," is a class object based library. The idea is that for every RAFFAELLO template in your page you have to declare an ",(0,l.jsx)(t.strong,{children:"unnamed class instantiated inline"}),". This class shoud only holds a ",(0,l.jsx)(t.code,{children:"constructor()"})," and a method ",(0,l.jsx)(t.code,{children:"initiateDrawing()"}),"."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-javascript",children:"new class {\n    constructor() { \n        // Initialization logic\n    }\n    templateInstructions() {\n        // Drawing logic\n    }\n}\n"})}),"\n",(0,l.jsx)(t.p,{children:"This class will be the rendering unit for a signle Raffaello-based canvas. You can have as many unnamed class as you like in a page.\nEach one will encapsulate all the necessary setup and rendering logic inside a single object, enabling modular, clean, and reusable rendering flows."}),"\n",(0,l.jsx)(t.p,{children:"This class pattern encourages a clear separation of responsibilities:"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Phase"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Purpose"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"constructor()"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Initialization of canvas, inputs, and DOM interactions"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"templateInstructions()"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"All layered drawing logic for preview and export"})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"constructor",children:"constructor()"}),"\n",(0,l.jsx)(t.p,{children:"Within the constructor, you initialize all the element for the template."}),"\n",(0,l.jsx)(i.A,{className:"small-code",language:"javascript",title:"Usage exemple",children:"new class {\n  constructor() { \n      // Get the DOW container\n      this.container = document.querySelector('#abcdef');\n\n      // Main canvas initialization\n      this.canvas = new Raffaello_Canvas({ ... });\n\n      // Image input initialization\n      ...\n\n      // Other inputs interactions\n      ...\n\n      // Download logic\n      ...\n  }\n\n  templateInstructions() { ... }\n}"}),"\n",(0,l.jsx)(t.p,{children:"You must define and maintain some key instance properties to ensure the rendering logic works correctly. These properties are required and should follow strict naming conventions:"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"this.container"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"\u2705"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"HTMLElement"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The root DOM container that holds all related inputs."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"this.canvas"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"\u2705"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Raffaello_Canvas"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The main canvas rendering engine. Used to create layers, draw, and export images."})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"templateinstructions",children:"templateInstructions()"}),"\n",(0,l.jsxs)(t.p,{children:["This methods will hold all the instructions to create the templated image. It should be named ",(0,l.jsx)(t.code,{children:"templateInstructions()"})," as some core function expect this name."]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.strong,{children:"Typical Usage"})}),"\n",(0,l.jsx)(i.A,{className:"small-code",language:"javascript",title:"Usage exemple",children:"new class {\n  constructor() { ... }\n\n  templateInstructions() {\n      // Capture the context of the template\n      const thisTemplate = this;\n\n      // LAYER 0\n      this.canvas.addLayer().draw(function() {\n          ... \n      });\n\n      // LAYER 1\n      this.canvas.addLayer().draw(function() {\n          ... \n      });\n\n      // ETC.\n  }\n}"})]})}function x(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);