"use strict";(self.webpackChunkraffaello_docs=self.webpackChunkraffaello_docs||[]).push([[684],{7539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>g,default:()=>m,frontMatter:()=>f,metadata:()=>l,toc:()=>y});const l=JSON.parse('{"id":"api/raffaello-canvas","title":"Raffaello_Canvas","description":"This is the main class that you should create, within the constructor of the global class. This will create the hidden canvas, the main structure, on wich you will add layers and render as a whole.","source":"@site/docs/api/01_raffaello-canvas.mdx","sourceDirName":"api","slug":"/api/raffaello-canvas","permalink":"/raffaello-docs/api/raffaello-canvas","draft":false,"unlisted":false,"editUrl":"https://github.com/TheoKVA/raffaello-docs/tree/main/docs/api/01_raffaello-canvas.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Global Class Object","permalink":"/raffaello-docs/api/global-class"},"next":{"title":"Raffaello_CanvasLayer","permalink":"/raffaello-docs/api/raffaello-canvas-layer"}}');var s=n(4848),i=n(8453),r=n(8069),a=n(6540),d=n(5246),c=n(6347);const o={apiTable:"apiTable_e8hp"};function h(e,t){let{name:n,children:l}=e;const i=function(e){let t=e;for(;(0,a.isValidElement)(t);)[t]=a.Children.toArray(t.props.children);if("string"!=typeof t)throw new Error(`Could not extract APITable row name from JSX tree:\n${JSON.stringify(e,null,2)}`);return t}(l),r=n?`${n}-${i}`:i,o=`#${r}`,h=(0,c.W6)();return(0,d.A)().collectAnchor(r),(0,s.jsx)("tr",{id:r,tabIndex:0,ref:h.location.hash===o?t:void 0,onClick:e=>{const t="TD"===e.target.tagName.toUpperCase(),n=!!window.getSelection()?.toString();t&&!n&&h.push(o)},onKeyDown:e=>{"Enter"===e.key&&h.push(o)},children:l.props.children})}const x=a.forwardRef(h);function j(e){let{children:t,name:n}=e;if("table"!==t.type)throw new Error("Bad usage of APITable component.\nIt is probably that your Markdown table is malformed.\nMake sure to double-check you have the appropriate number of columns for each table row.");const[l,i]=a.Children.toArray(t.props.children),r=(0,a.useRef)(null);(0,a.useEffect)((()=>{r.current?.focus()}),[r]);const d=a.Children.map(i.props.children,(e=>(0,s.jsx)(x,{name:n,ref:r,children:e})));return(0,s.jsxs)("table",{className:o.apiTable,children:[l,(0,s.jsx)("tbody",{children:d})]})}const f={},g="Raffaello_Canvas",p={},y=[{value:"Usage",id:"usage",level:2},{value:"Constructor Options",id:"constructor-options",level:2},{value:"Initiated Properties",id:"initiated-properties",level:2},{value:"Public methods",id:"public-methods",level:2},{value:".addLayer()",id:"addlayer",level:3},{value:".updateLayers()",id:"updatelayers",level:3},{value:".downloadImage()",id:"downloadimage",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"raffaello_canvas",children:"Raffaello_Canvas"})}),"\n","\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"new Raffaello_Canvas({ options })\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This is the main class that you should create, within the ",(0,s.jsx)(t.strong,{children:"constructor"})," of the ",(0,s.jsx)(t.strong,{children:"global class"}),". This will create the hidden canvas, the main structure, on wich you will add layers and render as a whole."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",metastring:'title="Condensed version"',children:"this.canvas = new Raffaello_Canvas({ \n    width: 1920,\n    height: 1080,\n    previewContainer: this.container.querySelector('.js-previewImage'),\n    nameInputContainer: this.container.querySelector('.js-fileNameInput'),\n});\n"})}),"\n",(0,s.jsx)(r.A,{className:"small-code",language:"javascript",title:"Extended version",children:"this.canvas = new Raffaello_Canvas({\n  width: 1080,\n  height: 1350,\n  previewContainer: this.container.querySelector('.js-previewImage'),\n  previewBackgroundColor: 'white', // (Optional) or style='background-color:...' on the previewContainer\n  nameInputContainer: this.container.querySelector('.js-fileNameInput'),\n  name: 'raffaelloImage.jpg' // (Optional) Default to nameInputContainer value\n  previewQuality: 0.9, // (Optional) Default to '0.8'\n  renderQuality: 0.96, // (Optional) Default to '0.96'\n  cornerRadius: 0, // (Optional) Default to '0'\n});"}),"\n",(0,s.jsx)(t.admonition,{title:"Naming convention",type:"note",children:(0,s.jsxs)(t.p,{children:["The instance must be called ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"this.canvas"})})," within the ",(0,s.jsx)(t.strong,{children:"constructor()"})," of the ",(0,s.jsx)(t.strong,{children:"global class object"}),", as a lot of later options rely on this name."]})}),"\n",(0,s.jsx)(t.h2,{id:"constructor-options",children:"Constructor Options"}),"\n",(0,s.jsx)(j,{children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"width"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"1000"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Width of the canvas (in pixels)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"height"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"1000"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Height of the canvas (in pixels)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"previewContainer"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"HTMLElement"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.code,{children:"null"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"..."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"previewBackgroundColor"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"CSS color"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'white'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - ..."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"nameInputContainer"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"HTMLElement"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.code,{children:"null"})})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - An HTMLElement to define the name of the final image. Typically an ",(0,s.jsx)(t.code,{children:"input"})," type. The name is grabbed using ",(0,s.jsx)(t.code,{children:"this.nameInputContainer.value"}),". If nothing is provided the generated file will be named after the ",(0,s.jsx)(t.code,{children:"name"})," option."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"name"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'Image_Raffaello.jpg'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - If no ",(0,s.jsx)(t.code,{children:"nameInputContainer"})," is provided, the name of the final image."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"previewQuality"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"0.8"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - ..."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"renderQuality"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"0.96"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - ..."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"cornerRadius"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"0"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - Defines the corner roundness in pixels. A value of ",(0,s.jsx)(t.code,{children:"0"})," means square corners. Make sure the output is in PNG format to see it."]})]})]})]})}),"\n",(0,s.jsx)(t.h2,{id:"initiated-properties",children:"Initiated Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"this.layers"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Array<Object>"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["An array containing all the ",(0,s.jsx)(t.code,{children:"Raffaello_CanvasLayer"})," objects that will create the final image"]})]})})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"public-methods",children:"Public methods"}),"\n",(0,s.jsx)(t.h3,{id:"addlayer",children:".addLayer()"}),"\n",(0,s.jsxs)(t.p,{children:["The main method to create a ",(0,s.jsx)(t.code,{children:"Raffaello_CanvasLayer"})," in the parameter array ",(0,s.jsx)(t.code,{children:"Raffaello_Canvas.layers"}),".\nThis methods should typically be called within the ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"initiateDrawing()"})})," function of the ",(0,s.jsx)(t.strong,{children:"global class"}),"."]}),"\n",(0,s.jsx)(r.A,{className:"small-code",language:"javascript",title:"Usage exemple",children:"new class {\n  constructor() { ... }\n  templateInstructions() {\n\n      // Draws with 'normal' blending mode\n      // highlight-start\n      this.canvas.addLayer().draw(function() {\n          ...\n      });\n      // highlight-end\n\n      // Draws with 'multiply' blending mode\n      // highlight-start\n      this.canvas.addLayer('effect', 'multiply').draw(function() {\n          ...\n      });\n      // highlight-end\n\n      // Drawing only appears where the next layer alpha is present\n      // highlight-start\n      this.canvas.addLayer('alpha').draw(function() {\n          ...\n      });\n      // highlight-end\n\n  }\n}"}),"\n",(0,s.jsxs)(t.admonition,{title:"Layer Ordering",type:"warning",children:[(0,s.jsx)(t.p,{children:"Be mindful of the order in which layers are added on the canvas. Layers are rendered in the sequence they are drawn, so the order will highly affect the final output."}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"         FINAL IMAGE\n     \u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\n     \u2502                \u2502\n   \u2552\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555 \u2502\n   \u2502 \u250a              \u2502 \u2502\n \u2552\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555 \u2502 \u2502 > FIRST Raffaello_CanvasLayer drawn\n \u2502 \u250a \u2514 \u2509 \u2509 \u2509 \u2509 \u2509  \u2502 \u255e\u2550\u255b\n \u2502 \u250a              \u2502 \u2502 > SECOND Raffaello_CanvasLayer drawn\n \u2502 \u2514 \u2509 \u2509 \u2509 \u2509 \u2509 \u2509  \u255e\u2550\u255b\n \u2502                \u2502 > THIRD Raffaello_CanvasLayer drawn\n \u2558\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255b\n"})})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:".addLayer(type = 'normal', style = null)\n"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"#"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"1"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"type"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'normal'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - The layer type. ",(0,s.jsx)(t.code,{children:"'normal'"})," / ",(0,s.jsx)(t.code,{children:"'effect'"})," / ",(0,s.jsx)(t.code,{children:"'alpha'"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"style"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.code,{children:"null"})})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Optional"})," - The second parameter, when the type is defined ",(0,s.jsx)(t.code,{children:"'effect'"})]})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Returns:"})," a new instance of a ",(0,s.jsx)(t.code,{children:"Raffaello_CanvasLayer"})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"type"})," is a parameter that will define the compositing operation to apply when drawing the layer, similar to a ",(0,s.jsx)(t.strong,{children:"blend style"})," fusion parameter. It defines the parameter ",(0,s.jsx)(t.strong,{children:"globalCompositeOperation"})," when drawing on the canvas, see the complete ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Type"})}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'normal'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.strong,{children:"blend style"})," is equivalent to globalCompositeOperation 'normal'."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'effect'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.strong,{children:"blend style"})," is equivalent to globalCompositeOperation second parameter ",(0,s.jsx)(t.code,{children:"style"}),". It can be any of ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation",children:"globalCompositeOperation properties"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"'alpha'"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.strong,{children:"blend style"})," is equivalent to globalCompositeOperation 'source-in' to the following drawn layer."]})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"updatelayers",children:".updateLayers()"}),"\n",(0,s.jsx)(t.p,{children:"Triggers a partial re-render of one or more canvas layers by their index."}),"\n",(0,s.jsx)(t.p,{children:"This is useful for improving performance or reacting to user input (e.g. live text updates or slider-driven changes) without re-rendering the entire canvas stack."}),"\n",(0,s.jsx)(r.A,{className:"small-code",language:"javascript",title:"Usage exemple",children:"new class {\n  constructor() { \n      this.canvas = new Raffaello_Canvas({ ... });\n\n      ...\n\n      // Text input interaction\n      // highlight-next-line\n      this.container.querySelector('.myTextInput').addEventListener('input', () => this.canvas.updateLayers([3,4]));\n\n      ...\n  }\n  templateInstructions() { ... }\n}"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:".updateLayers(array)\n"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"integer Array"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.code,{children:"null"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The index of the layers to update. Base 0"})]})})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"void"})," \u2014 This method performs a side effect (selectively redraws layers). It does not return any value."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"downloadimage",children:".downloadImage()"}),"\n",(0,s.jsx)(t.p,{children:"Triggers the rendering and download of the current canvas state as an image file."}),"\n",(0,s.jsxs)(t.p,{children:["This method finalizes the layers, converts the rendered canvas into an image, and automatically prompts the user to download the result (e.g. ",(0,s.jsx)(t.code,{children:"'Image_Raffaello.jpg'"}),")."]}),"\n",(0,s.jsx)(r.A,{className:"small-code",language:"javascript",title:"Usage exemple",children:"new class {\n  constructor() { \n      this.canvas = new Raffaello_Canvas({ ... });\n\n      ...\n\n      // Download logic\n      // highlight-next-line\n      this.container.querySelector('.myButton').addEventListener('click', () => this.canvas.downloadImage());\n  }\n  templateInstructions() { ... }\n}"}),"\n",(0,s.jsx)(t.p,{children:"Complementary info."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:".downloadImage()\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"None."})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"void"})," \u2014 This method performs a side effect (downloads the image). It does not return any value"]}),"\n",(0,s.jsx)(t.hr,{})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);